import streamlit as st
import openai
import json

# === Setup ===
openai.api_key = st.secrets["OPENAI_API_KEY"]
st.set_page_config(page_title="Ist das Gottesnahrung?", layout="centered", page_icon="ü•©")
st.title("ü•© Ist das Gottesnahrung?")

# === Load Whitelist & Blacklist ===
with open("whitelist.json", "r", encoding="utf-8") as f:
    whitelist = json.load(f)

with open("blacklist.json", "r", encoding="utf-8") as f:
    blacklist = json.load(f)

# === Vorschl√§ge ===
vorschlaege = [
    "Protein Pulver Vanille",
    "Tatar mit Eigelb",
    "Rohmilch",
    "Smacktastic",
    "Ziegenk√§se roh",
    "Booster Apfel",
    "Chia Pudding",
    "Lachs mit Butter"
]

eingabe = st.text_input("Gib ein Lebensmittel oder Produkt ein:", placeholder="z.‚ÄØB. Protein Pulver Vanille", value="")

# === Samen√∂l-Nachfrage-Logik ===
kritische_woerter = ["salat", "dressing", "suppe", "gem√ºse", "auflauf", "bowls", "pfanne", "m√ºsli", "brot"]
samen_check = any(wort in eingabe.lower() for wort in kritische_woerter)
nutzerantwort = None

if samen_check:
    st.markdown("üëÄ **Enth√§lt dein Gericht Samen√∂le, fertige Dressings oder Zus√§tze?**")
    col1, col2 = st.columns(2)
    with col1:
        if st.button("‚úÖ Nein, alles nat√ºrlich"):
            nutzerantwort = "no_samen"
    with col2:
        if st.button("‚ùå Ja, Fertigzeug oder Samen√∂l"):
            st.error("‚ùå Auf gar keinen Fall ‚Äì Samen√∂l detected. Industrieware, die Gott weinen l√§sst.")
            st.stop()

# === Check starten ===
if st.button("Checken") and eingabe:
    produkt = eingabe.strip().lower()
    if produkt in [item.lower() for item in whitelist]:
        st.success("‚úÖ Gottesnahrung ‚Äì approved von der Rohgang. Ehre, wer Ehre verdient.")
    elif produkt in [item.lower() for item in blacklist]:
        st.error("‚ùå Auf gar keinen Fall ‚Äì das schreit nach Industrie und Verirrung.")
    else:
        with st.spinner("Bewertung durch die Rohgang l√§uft..."):
            zusatz = ""
            if nutzerantwort == "no_samen":
                zusatz = "\nHinweis: Nutzer best√§tigt, dass keine Samen√∂le oder Fertigprodukte enthalten sind."

            prompt = (
                f"Ein Nutzer m√∂chte wissen, ob folgendes Produkt 'Gottesnahrung' ist: {eingabe}\n"
                f"{zusatz}\n"
                "Bewerte aus Sicht eines extrem kritischen Rohkost-Fans:\n"
                "- Unverarbeitet, nat√ºrlich, m√∂glichst tierisch oder urt√ºmlich = ‚úÖ\n"
                "- Industrie, Proteinpulver, Booster, Samen√∂le, ESN, Rocka, More etc. = ‚ùå\n"
                "- Pflanzlich ist ok, solange nicht verarbeitet\n"
                "Sprache: ironisch, pointiert, kurz und witzig.\n"
                "Kategorien: ‚úÖ Gottesnahrung, ü§î Vielleicht, ‚ùå Auf gar keinen Fall\n"
                "Antwort auf Deutsch, Emoji + Kategorie zuerst, dann Kommentar."
            )

            try:
                response = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=[
                        {"role": "system", "content": "Du bist ein fanatischer, aber ironischer Rohkost-Guru."},
                        {"role": "user", "content": prompt}
                    ],
                    temperature=0.85,
                    max_tokens=100
                )
                antwort = response.choices[0].message.content
                if "‚úÖ" in antwort:
                    st.success(antwort)
                elif "‚ùå" in antwort:
                    st.error(antwort)
                else:
                    st.warning(antwort)
            except Exception as e:
                st.error(f"Fehler: {e}")

# Footer
st.markdown("---\nüçØ #gottesnahrung #rohgang")
